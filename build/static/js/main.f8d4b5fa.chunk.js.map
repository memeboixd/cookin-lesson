{"version":3,"sources":["logo.svg","Contents.js","Compth.js","Head.js","Footr.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Cont","id","nazwa","isVege","skladniki","czas","sposob","Compth","state","renNum","classname","DATA","map","iter","className","key","Component","Head","href","Footr","App","ReactDOM","render","document","getElementById","Boolean","window","location","hostname","match","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qJAAAA,EAAOC,QAAU,IAA0B,kC,8HCuI5BC,G,YAvIF,CACT,CACIC,GAAI,EACJC,MAAO,uBACPC,QAAS,EACTC,UAAW,yUAYXC,KAAM,GACNC,OAAQ,mhBAQX,CACGL,GAAI,EACJC,MAAO,YACNC,QAAQ,EACTC,UAAW,2KAQXC,KAAM,GACNC,OAAQ,oiBAIZ,CACIL,GAAI,EACJC,MAAO,QACPC,QAAQ,EACRC,UAAW,mdAeXC,KAAM,GACNC,OAAQ,2wBAMZ,CACIL,GAAI,EACJC,MAAO,QACPE,UAAW,obAyBXC,KAAM,IACNF,QAAQ,EACRG,OAAQ,krDC3CDC,E,kDApDX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,OAAS,EACTC,UAAY,IAJN,E,qDASV,IAAMC,EAAOX,EAAKY,KAAI,SAAAC,GAAI,OAAI,yBAAKC,UAAU,aAAY,yBAAKb,GAAIY,EAAKZ,GAAIc,IAAKF,EAAKZ,GAAIE,OAAQU,EAAKV,QAMlG,4BACI,wBAAIW,UAAU,cAAd,iBACA,wBAAIA,UAAU,cAAd,aACA,wBAAIA,UAAU,cAAd,wBACA,wBAAIA,UAAU,cAAd,6BAGJ,yBAAKA,UAAWD,EAAKZ,GAAI,IAAM,EAAI,SAAW,UAC1C,yBAAKa,UAAWD,EAAKV,OAAS,SAAU,UACxC,wBAAIW,UAAU,cAAcD,EAAKX,OACrC,wBAAIY,UAAU,cAAcD,EAAKT,WACjC,wBAAIU,UAAU,OAAOD,EAAKP,QAC1B,wBAAIQ,UAAU,QAAQD,EAAKR,aAI/B,OACI,6BACI,+BAEKM,Q,GApCAK,aC6BNC,E,kDA5BX,aAAe,wC,qDAKX,OACI,yBAAKH,UAAU,QAKP,4BACI,wBAAIb,GAAG,SAAP,mBACR,wBAAIa,UAAU,aAAY,uBAAGI,KAAK,KAAKJ,UAAU,QAAvB,cAC1B,wBAAIA,UAAU,aAAY,uBAAGI,KAAK,KAAKJ,UAAU,QAAvB,cAC1B,wBAAIA,UAAU,aAAY,uBAAGI,KAAK,KAAKJ,UAAU,QAAvB,UAC1B,wBAAIA,UAAU,aAAY,uBAAGI,KAAK,KAAKJ,UAAU,QAAvB,gB,GAjBvBE,aCgBJG,E,uKAfP,OAEI,gCACI,uBAAGlB,GAAG,cAAciB,KAAK,gCAAzB,qBACA,0EACA,kD,GAPIF,aCQdI,E,kDACJ,aAAe,IAAD,8BACZ,gBACKZ,MAAQ,GAFD,E,qDAUZ,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACE,kBAAC,EAAD,W,GAfQQ,aAqBlBK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SAElCJ,QCrBKK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNR,IAASC,OACP,kBAAC,IAAMQ,WAAP,KACE,kBAAC,EAAD,OAEFP,SAASC,eAAe,SDyHpB,kBAAmBO,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f8d4b5fa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const Cont = [\r\n    {\r\n        id: 1,\r\n        nazwa: 'Spaghetti Napolitana',\r\n        isVege : false,\r\n        skladniki: '300 mlpassaty pomidorowej\\n' +\r\n            '300 gmielonej wołowiny\\n' +\r\n            '300 gmakaronu spaghetti\\n' +\r\n            '30 gtartego parmezanu\\n' +\r\n            '1łyżka koncentratu pomidorowego\\n' +\r\n            '1ząbek czosnku\\n' +\r\n            '1mała cebula\\n' +\r\n            '0.5łyżeczki suszonego tymianku\\n' +\r\n            '0.5łyżeczki suszonego oregano\\n' +\r\n            'oliwa z oliwek\\n' +\r\n            'sól, pieprz\\n' +\r\n            'świeża bazylia',\r\n        czas: 45,\r\n        sposob: 'Na głębokiej patelni rozgrzej około 2 łyżki oliwy z oliwek.\\n' +\r\n            '\\n' +\r\n            'Na rozgrzaną patelnię wrzuć czosnek i cebulę, a po chwili dodaj mięso, rozdrabniaj je np. widelcem, tak aby nie powstały grube mięsne grudki.\\n' +\r\n            '\\n' +\r\n            'Do mięsa dodaj zioła oraz koncentrat. Całość podgrzewaj przez chwilę, dodaj passatę (przecier pomidorowy), gotuj na małym ogniu około 30 minut.\\n' +\r\n            '\\n' +\r\n            'Makaron ugotuj al dente, podawaj go z sosem, serem, i bazylią.'\r\n    },\r\n     {\r\n        id: 2,\r\n        nazwa: 'Nalesniki',\r\n         isVege: true,\r\n        skladniki: '1 szklanka mąki pszennej\\n' +\r\n            '2 jajka\\n' +\r\n            '1 szklanka mleka\\n' +\r\n            '3/4 szklanki wody (najlepiej gazowanej)\\n' +\r\n            'szczypta soli\\n' +\r\n            '3 łyżki masła lub oleju roślinnego',\r\n\r\n\r\n        czas: 20,\r\n        sposob: 'Mąkę wsypać do miski, dodać jajka, mleko, wodę i sól. Zmiksować na gładkie ciasto. Dodać roztopione masło lub olej roślinny i razem zmiksować (lub wykorzystać tłuszcz do smarowania patelni przed smażeniem każdego naleśnika).\\n' +\r\n            'Naleśniki smażyć na dobrze rozgrzanej patelni z cienkim dnem np. naleśnikowej. Przewrócić na drugą stronę gdy spód naleśnika będzie już ładnie zrumieniony i ścięty.'\r\n    },\r\n\r\n    {\r\n        id: 3,\r\n        nazwa: 'Pizza',\r\n        isVege: false,\r\n        skladniki: '\\n' +\r\n            '    Ciasto:\\n' +\r\n            '    2 szklanki mąki orkiszowej\\n' +\r\n            '    3/4 szklanki letniej wody\\n' +\r\n            '    1 opakowanie suszonych drożdży\\n' +\r\n            '    1 łyżeczka soli\\n' +\r\n            '    1 łyżeczka cukru\\n' +\r\n            '    3 łyżki oleju z suszonych pomidorów\\n' +\r\n            '    Dodatkowo:\\n' +\r\n            '    100 gram salami w plasterkach\\n' +\r\n            '    150 gram sera żółtego\\n' +\r\n            '    Pół słoika suszonych pomidorów\\n' +\r\n            '    Garść kaparów\\n' +\r\n            '    Ketchup\\n' +\r\n            '    Zioła prowansalskie\\n',\r\n        czas: 55,\r\n        sposob: 'Do miski przesiewamy mąkę, dodajemy sól, cukier, suche drożdże, wlewamy letnią wodę i olej. Wszystko mieszamy i zagniatamy ciasto. Odstawiamy na pół godziny do wyrośnięcia, przekładamy na stolnicę, ponownie zagniatamy i formujemy koło, ciasto przekładamy na blachę wyłożoną papierem do pieczenia, smarujemy ketchupem, posypujemy ziołami prowansalskimi.\\n' +\r\n            '\\n' +\r\n            'Ser żółty ścieramy na tarce o grubych oczkach, posypujemy na pizzy, układamy plasterki salami. Pomidory odsączamy z oleju, kroimy na mniejsze kawałki, układamy na pizzy, posypujemy kaparami.\\n' +\r\n            '\\n' +\r\n            'Pizzę wstawiamy do piekarnika i pieczemy przez 25-30 minut w temperaturze 180 stopni. '\r\n},\r\n    {\r\n        id: 4,\r\n        nazwa: 'Homar',\r\n        skladniki: '\\n' +\r\n            '2\\n' +\r\n            'homary po 400 g\\n' +\r\n            '450 g\\n' +\r\n            'batatów\\n' +\r\n            'sól\\n' +\r\n            'świeżo zmielony pieprz\\n' +\r\n            '3 łyżki\\n' +\r\n            'oliwy z oliwek z czosnkiem EXQUISIT\\n' +\r\n            '2\\n' +\r\n            'ząbki czosnku\\n' +\r\n            '2\\n' +\r\n            'czerwone cebule\\n' +\r\n            '1\\n' +\r\n            'liść nori\\n' +\r\n            '100 g\\n' +\r\n            'majonezu K-Classic lub Vita Star\\n' +\r\n            '1 łyżeczka\\n' +\r\n            'sosu Worcester\\n' +\r\n            '1 łyżeczka\\n' +\r\n            'startej skórka cytryny\\n' +\r\n            '3 łyżki\\n' +\r\n            'sól\\n' +\r\n            '2 łyżeczki\\n' +\r\n            'posiekanej pietruszki naciowej kędzierzawej\\n',\r\n        czas: 120,\r\n        isVege: false,\r\n        sposob: '1\\n' +\r\n            'Rozmrażać homary w lodówce przez 8-10 godz..\\n' +\r\n            '\\n' +\r\n            '2\\n' +\r\n            'Następnie opłukać je w zimnej wodzie i osuszyć ręcznikiem papierowym. Oddzielić kleszcze od korpusu. Oklepać nożem skorupy. Wydobyć mięso z kleszczy. Korpusy homarów przeciąć w środku na pół. Odnóża również oklepać nożem i wyjąć mięso. Odłożyć na bok ogony. Wyrzucić wnętrze korpusów.\\n' +\r\n            '\\n' +\r\n            '3\\n' +\r\n            'Bataty obrać, umyć i pokroić w łódeczki.\\n' +\r\n            '\\n' +\r\n            '4\\n' +\r\n            'Piekarnik z termoobiegiem rozgrzać do 160ºC.\\n' +\r\n            '\\n' +\r\n            '5\\n' +\r\n            'Pokrojone bataty umieścić na blasze wyłożonej papierem do pieczenia, posypać solą i pieprzem, skropić 1 łyżką oliwy i piec w piekarniku przez 30 min.\\n' +\r\n            '\\n' +\r\n            '6\\n' +\r\n            'W tym czasie obrać cebule i czosnek i pokroić w kostkę. Liść nori pociąć nożyczkami na małe kawałki. Majonez wymieszać z nori, solą, pieprzem, sosem Worchester, startą skórką cytryny i 1 łyżką oliwy z oliwek.\\n' +\r\n            '\\n' +\r\n            '7\\n' +\r\n            'Cebulę i czosnek smażyć przez 2 min na patelni na pozostałej rozgrzanej oliwie.\\n' +\r\n            '\\n' +\r\n            '8\\n' +\r\n            'Następnie umieścić na niej ogony homarów i smażyć przez kolejne 5 min.\\n' +\r\n            '\\n' +\r\n            '9\\n' +\r\n            'Dodać pozostałe mięso homarów, masło i pietruszkę i smażyć przez 3-4 min. Przyprawić pieprzem.\\n' +\r\n            '\\n' +\r\n            '10\\n' +\r\n            'Na talerzach umieścić po dwie połówki ogona, po parze kleszczy i mięso homara. Posypać pietruszką. Podawać z łódeczkami z batatów i majonezem z liściem nori.'\r\n\r\n    },\r\n\r\n\r\n\r\n]\r\n\r\nexport default Cont\r\n\r\n","import React, {Component} from \"react\";\r\nimport Cont from \"./Contents\";\r\n\r\nclass Compth extends Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            renNum : 0,\r\n            classname : ''\r\n\r\n        }\r\n    }\r\n    render() {\r\n        const DATA = Cont.map(iter => <div className='Component'><div id={iter.id} key={iter.id} isVege={iter.isVege}>\r\n\r\n\r\n\r\n\r\n\r\n            <tr>\r\n                <th className='table-comp'>nazwa potrawy</th>\r\n                <th className='table-comp'>skladniki</th>\r\n                <th className='table-comp'>sposob przygotowania</th>\r\n                <th className='table-comp'>czas przygotowania [min]</th>\r\n            </tr>\r\n\r\n            <div className={iter.id %2 === 0 ? 'class1' : 'class2'}>\r\n                <div className={iter.isVege ? 'class3': 'class4'}>\r\n                <td className='table-head'>{iter.nazwa}</td>\r\n            <td className='components'>{iter.skladniki}</td>\r\n            <td className='way'>{iter.sposob}</td>\r\n            <td className='time'>{iter.czas}</td>\r\n                </div>\r\n                </div>\r\n        </div></div>)\r\n        return(\r\n            <div>\r\n                <table>\r\n\r\n                    {DATA}\r\n                  \r\n\r\n                </table>\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Compth","import React, {Component} from \"react\";\r\nimport Compth from \"./Compth\";\r\n\r\nclass Head extends Component{\r\n    constructor() {\r\n        super();\r\n\r\n    }\r\n    render() {\r\n        return(\r\n            <div className='Head'>\r\n\r\n\r\n\r\n\r\n                    <ul>\r\n                        <li id='title'> Cooking lesson</li>\r\n                <li className='nav-field'><a href='#1' className='link' >Spaghetti</a></li>\r\n                <li className='nav-field'><a href='#2' className='link'>Nalesniki</a></li>\r\n                <li className='nav-field'><a href='#3' className='link'>Pizza</a></li>\r\n                <li className='nav-field'><a href='#4' className='link'>Homar</a></li>\r\n                    </ul>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\nexport default Head\r\n\r\n","import React, {Component} from \"react\";\r\n\r\nclass Footr extends Component{\r\n    render() {\r\n        return(\r\n\r\n            <footer>\r\n                <a id='footer-text' href='https://github.com/memeboixd'>Zobacz moj github</a>\r\n                <p >Strona stworzona uzywajac technologii react</p>\r\n                <p>MEMe CORP 2020</p>\r\n            </footer>\r\n\r\n\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\nexport default Footr\r\n\r\n","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ReactDOM from 'react-dom'\nimport Cont from \"./Contents\";\nimport Compth from \"./Compth\";\nimport Head from \"./Head\";\nimport Footr from \"./Footr\";\n\n\nclass App extends Component{\n  constructor() {\n    super();\n    this.state = {}\n  }\n\n\n  render() {\n\n\n\n    return(\n      <div>\n        <Head></Head>\n        <Compth></Compth>\n          <Footr></Footr>\n      </div>\n    )}\n\n\n}\nReactDOM.render(<App />, document.getElementById('root'))\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}